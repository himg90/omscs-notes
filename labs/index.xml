<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Labs on CS7210 - Distributed Computing</title><link>https://www.digestnotes.com/labs/</link><description>Recent content in Labs on CS7210 - Distributed Computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://www.digestnotes.com/labs/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://www.digestnotes.com/labs/lab02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.digestnotes.com/labs/lab02/</guid><description>Wait-Notify Semantics of Java Java has a builtin wait mechanism that enable threads to become inactive while waiting for signals. The class java.lang.Object defines three methods, wait(), notify(), and notifyAll(), to facilitate this. A thread that calls wait() on any object becomes inactive until another thread calls notify() on that object. In order to call either wait() or notify the calling thread must first obtain the lock on that object.</description></item><item><title>DSLabs Abstract Interface</title><link>https://www.digestnotes.com/labs/framework/01_framework_abstraction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.digestnotes.com/labs/framework/01_framework_abstraction/</guid><description>The system consists of a number of nodes which have addresses A Node can send() a message to another node. The receiving node has to handle() the message. Some nodes expose a client interface. An external user can interact with the distributed system by send()ing commandsand gettting results back. Application: Some nodes (server nodes) have contain an application object. An example of an application would be key-value in-memory store. Application is what the users of the distributed system want to access.</description></item><item><title>Message Wrappers</title><link>https://www.digestnotes.com/labs/framework/02_packets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.digestnotes.com/labs/framework/02_packets/</guid><description>There are my abstractions:
Message Requst and Reply MessageEnvelop Command and Result</description></item><item><title>WIP</title><link>https://www.digestnotes.com/labs/framework/dslabs_client_to_server_communication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.digestnotes.com/labs/framework/dslabs_client_to_server_communication/</guid><description/></item></channel></rss>