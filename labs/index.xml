<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Labs on CS7210 - Distributed Computing</title><link>https://www.digestnotes.com/labs/</link><description>Recent content in Labs on CS7210 - Distributed Computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://www.digestnotes.com/labs/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://www.digestnotes.com/labs/lab02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.digestnotes.com/labs/lab02/</guid><description>Wait-Notify Semantics of Java Java has a builtin wait mechanism that enable threads to become inactive while waiting for signals. The class java.lang.Object defines three methods, wait(), notify(), and notifyAll(), to facilitate this. A thread that calls wait() on any object becomes inactive until another thread calls notify() on that object. In order to call either wait() or notify the calling thread must first obtain the lock on that object.</description></item><item><title/><link>https://www.digestnotes.com/labs/lab03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.digestnotes.com/labs/lab03/</guid><description>Test 16 # Command python3 run-tests.py --lab 3 --part 2 --test-num 16 --log-level FINE --checks # Result Objects not equal to their clone. Check all classes correctly implement equals. Objects have hashCode not equal to their clone. Check all classes correctly implement hashCode.</description></item></channel></rss>