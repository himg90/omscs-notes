<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lectures on CS7210 - Distributed Computing</title><link>https://www.digestnotes.com/lectures/</link><description>Recent content in Lectures on CS7210 - Distributed Computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 10 Oct 2021 16:16:01 +0530</lastBuildDate><atom:link href="https://www.digestnotes.com/lectures/index.xml" rel="self" type="application/rss+xml"/><item><title>01 - Introduction</title><link>https://www.digestnotes.com/lectures/lecture01/</link><pubDate>Sun, 10 Oct 2021 16:16:01 +0530</pubDate><guid>https://www.digestnotes.com/lectures/lecture01/</guid><description>Introduction to Distributed Systems What is a Distributed System?
A collection of independent and autonomous processes(nodes) that interact by exchanging messages via interconnection network and appear to external users as a single coherent computing facility.
The phrase &amp;ldquo;single coherent computing facility&amp;rdquo; means that there is a common goal which the processes are trying to achieve together.
Simple Model
There nodes which communicate by exchaning messages. Communication channels are unidirectional.</description></item><item><title>03 - Time in D. Systems</title><link>https://www.digestnotes.com/lectures/lecture03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.digestnotes.com/lectures/lecture03/</guid><description>Time in Distributed Systems Introduction Distributed Systems cannot rely on Physical Clocks so they rely on Logical Clocks Reason: Physical clocks of individual processes need to be synchronized but perfect synchronization is not possible. Why Do We Need Time There are many scenarios in which knowing the time can be helpful. For eg. checking the correctness of the program.</description></item><item><title>04 - State in D. Systems</title><link>https://www.digestnotes.com/lectures/lecture04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.digestnotes.com/lectures/lecture04/</guid><description>State in Distributed Systems Terminology The Global State of the system is the union of Process States and Channel States Channel State: The State of a channel between two processes is defined by the set of msgs sent from sender process but not delivered to receiver process. Process State: Context stored on a client for eg variables, data structures etc. Process History: Sequence of events that occured on a process in distributed system.</description></item><item><title>05 - Consensus</title><link>https://www.digestnotes.com/lectures/lecture05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.digestnotes.com/lectures/lecture05/</guid><description>Consensus Link to Lecture Slides
Paper Trail: A Brief Tour of FLP Impossibility
Consensus What is Consensus? Ability of processes in a distributed processes to agree on something like the value of a variable current timestamp or point of computation taking an action etc. Why is it important? Important to make forward progress in distributed system. Reaching a consensus makes it possible for the system to be correct.</description></item><item><title>06 - Replication</title><link>https://www.digestnotes.com/lectures/lecture06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.digestnotes.com/lectures/lecture06/</guid><description>Replication Goals of Replication State available at more than one node =&amp;gt; Fault-tolerance, Availability Service can be provided from more than one node =&amp;gt; Scalability Replication Modes Active Replication (all replicas read, write and update each other) Stand-by (Primary-backup) Replication (Only one replica reads and writes, rest just follow updates from primary) Replication Techniques State Replication Replicated State Machine Change in state is sent to other replicas The operation (event) is executed(applied) to every replica + No need to execute operation again + No need to transmit large state delta - Determining change in state can be complex and large - Operation needs to be executed and must be deterministic Replication and Consensus &amp;hellip;</description></item><item><title>07 - Fault Tolerance</title><link>https://www.digestnotes.com/lectures/lecture07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.digestnotes.com/lectures/lecture07/</guid><description>Fault Tolerance Some Taxonomy Fault-Error-Failure Fault is the problem (software bug, hardware failure) When fault is activated (because buggy part of code is executed), it causes errors Failure is the resulting behaviour Faults: Transient / Intermittent / Permanent Failures: Fail-stop / Timing / Omission / Byzantine Timing: System becomes &amp;ldquo;slow&amp;rdquo; Omission: some actions are missing like msg drops due to memory constraints Managing Failures: Avoidance / Detection / Recovery / Removal Detected failues are either removed by rollback or recovered from.</description></item></channel></rss>